(set-logic LIA)

( declare-const a Int )
( declare-const a! Int )
( declare-const sn Int )
( declare-const sn! Int )
( declare-const x Int )
( declare-const x! Int )
( declare-const tmp Int )
( declare-const tmp! Int )

( declare-const a_0 Int )
( declare-const sn_0 Int )
( declare-const sn_1 Int )
( declare-const sn_2 Int )
( declare-const sn_3 Int )
( declare-const sn_4 Int )
( declare-const x_0 Int )
( declare-const x_1 Int )

( define-fun inv-f( ( a Int )( sn Int )( x Int )( tmp Int ) ) Bool
SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
)

( define-fun pre-f ( ( a Int )( sn Int )( x Int )( tmp Int )( a_0 Int )( sn_0 Int )( sn_1 Int )( sn_2 Int )( sn_3 Int )( sn_4 Int )( x_0 Int )( x_1 Int ) ) Bool
	( and
		( = sn sn_1 )
		( = x x_1 )
		( = sn_1 0 )
		( = x_1 0 )
	)
)

( define-fun trans-f ( ( a Int )( sn Int )( x Int )( tmp Int )( a! Int )( sn! Int )( x! Int )( tmp! Int )( a_0 Int )( sn_0 Int )( sn_1 Int )( sn_2 Int )( sn_3 Int )( sn_4 Int )( x_0 Int )( x_1 Int ) ) Bool
	( or
		( and
			( = sn_2 sn )
			( = sn_2 sn! )
			( = a a! )
			( = sn sn! )
			( = x x! )
			(= tmp tmp! )
		)
		( and
			( = sn_2 sn )
			( < x_1 10 )
			( = sn_3 ( + sn_2 a_0 ) )
			( = sn_4 sn_3 )
			( = sn_4 sn! )
			(= a a_0 )
			(= a! a_0 )
			(= x x_1 )
			( = x! ( + x_1 1 ) )
			(= tmp tmp! )
		)
		( and
			( = sn_2 sn )
			( not ( < x_1 10 ) )
			( = sn_4 sn_2 )
			( = sn_4 sn! )
			(= a a_0 )
			(= a! a_0 )
			(= x x_1 )
			(= x! x_1 )
			(= tmp tmp! )
		)
	)
)

( define-fun post-f ( ( a Int )( sn Int )( x Int )( tmp Int )( a_0 Int )( sn_0 Int )( sn_1 Int )( sn_2 Int )( sn_3 Int )( sn_4 Int )( x_0 Int )( x_1 Int ) ) Bool
	( and
		( or
			( not
				( and
					( = a a_0 )
					( = sn sn_2)
					( = x x_1)
				)
			)
			( not
				( and
					( = sn_2 ( * x_1 a_0 ) )
					( not ( or ( = sn_2 ( * x_1 a_0 ) ) ( = sn_2 0 ) ) )
				)
			)
		)
		( or
			( not
				( and
					( = a a_0 )
					( = sn sn_2)
					( = x x_1)
				)
			)
			( not
				( and
					( not ( = sn_2 ( * x_1 a_0 ) ) )
					( not ( or ( = sn_2 ( * x_1 a_0 ) ) ( = sn_2 0 ) ) )
				)
			)
		)
	)
)
SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
( assert ( not
	( =>
		( pre-f a sn x tmp a_0 sn_0 sn_1 sn_2 sn_3 sn_4 x_0 x_1  )
		( inv-f a sn x tmp )
	)
))

SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
( assert ( not
	( =>
		( and
			( inv-f a sn x tmp )
			( trans-f a sn x tmp a! sn! x! tmp! a_0 sn_0 sn_1 sn_2 sn_3 sn_4 x_0 x_1 )
		)
		( inv-f a! sn! x! tmp! )
	)
))

SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
( assert ( not
	( =>
		( inv-f a sn x tmp  )
		( post-f a sn x tmp a_0 sn_0 sn_1 sn_2 sn_3 sn_4 x_0 x_1 )
	)
))

